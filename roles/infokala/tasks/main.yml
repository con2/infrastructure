- name: "Create infokala group to facilitate access to static files"
  group: name=infokala system=yes

- name: "Add the nginx user to the infokala group"
  user: name=nginx groups=infokala append=yes

- name: "Create host data directory"
  file: path=/srv/{{ infokala_hostname }} state=directory owner=root group=infokala mode=02710

- name: "Create static files directory"
  file: path=/srv/{{ infokala_hostname }}/public_html state=directory owner=root group=infokala mode=02750

- name: "Setup nginx vhost for {{ infokala_hostname }}"
  template: src=infokala.nginx.j2 dest=/etc/nginx/sites-available/{{ infokala_hostname }} mode=0644
  notify: restart nginx

- name: "Enable nginx vhost for {{ infokala_hostname }}"
  file: >
    src=/etc/nginx/sites-available/{{ infokala_hostname }}
    path=/etc/nginx/sites-enabled/{{ infokala_hostname }}
    state=link
  notify: restart nginx

- name: "Update Infokala docker image from the registry"
  docker_image:
    name: tracon/infokala
    force: yes
  tags: [infokala-deploy]

- name: "Create Infokala container for {{ infokala_hostname }}"
  docker_container:
    name: "{{ infokala_hostname }}"
    image: tracon/infokala
    recreate: yes
    command: "gunicorn --bind=0.0.0.0:8000 --workers={{ infokala_workers }} infokala_tracon.wsgi:application"
    ports:
      - "{{ infokala_port }}:8000"
    links:
      - "{{ infokala_postgresql_container }}:postgres"
    env:
      ADMINS: "{{ infokala_admins }}"
      ALLOWED_HOSTS: "{{ infokala_allowed_hosts }}"
      DATABASE_URL: "postgres://{{ infokala_postgresql_username }}:{{ infokala_postgresql_password }}@postgres/{{ infokala_postgresql_database }}"
      DEFAULT_FROM_EMAIL: "{{ infokala_default_from_email }}"
      EMAIL_HOST: "{{ infokala_email_host }}"
      KOMPASSI_OAUTH2_CLIENT_ID: "{{ infokala_kompassi_oauth2_client_id }}"
      KOMPASSI_OAUTH2_CLIENT_SECRET: "{{ infokala_kompassi_oauth2_client_secret }}"
      SECRET_KEY: "{{ infokala_secret_key }}"
  tags: [infokala-deploy]

- name: "Extract static files from inside container"
  command: >
    /usr/bin/docker cp {{ infokala_hostname }}:/usr/src/app/infokala-tracon/static /srv/{{ infokala_hostname }}/public_html/
  tags: [infokala-deploy]
