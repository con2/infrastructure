- name: install packages for postgresql
  apt:
    name:
      - postgresql-{{ postgresql_version }}
      - python3-psycopg2
      - rsync

- name: setup pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_config_directory }}/pg_hba.conf"
  notify: restart postgresql

- name: setup postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_config_directory }}/postgresql.conf"
  notify: restart postgresql

- name: allow postgresql in firewall
  ufw:
    rule: allow
    port: 5432
    from: "{{ item }}"
  with_items: "{{ postgresql_access_networks }}"

# - name: allow postgresql in firewall (docker bridge)
#   ufw:
#     rule: allow
#     port: 5432
#     from: "172.17.0.0/16"

- name: make sure postgresql is running
  service:
    name: postgresql
    state: started

- name: create superuser account for backup
  become_user: postgres
  postgresql_user:
    name: "{{ postgresql_barman_db_user }}"
    password: "{{ postgresql_barman_db_password }}"
    role_attr_flags: SUPERUSER
    encrypted: yes

- name: create replication account for backup
  become_user: postgres
  postgresql_user:
    name: "{{ postgresql_barman_db_streaming_user }}"
    password: "{{ postgresql_barman_db_streaming_password }}"
    role_attr_flags: REPLICATION
    encrypted: yes

- name: allow the backup user to ssh in as {{ postgresql_user }}
  authorized_key:
    user: "{{ postgresql_user }}"
    state: present
    key: "{{ postgresql_barman_ssh_public_key_data }}"

- name: install postgres ssh private key
  copy:
    content: "{{ postgresql_ssh_private_key_data }}"
    dest: "{{ postgresql_directory }}/.ssh/id_rsa"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_user }}"
    mode: 0600

- name: Make sure backup directories exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /var/backups
    - /var/backups/postgresql

- name: Set up pre-backup script
  template:
    src: pre-backup.sh.j2
    dest: /etc/pre-backup.d/{{ postgresql_hostname }}-postgres.sh
    mode: 0755

- name: "Create a root-owned copy of SSL key"
  copy:
    src: "{{ postgresql_ssl_certificate_key }}"
    remote_src: yes
    dest: "{{ postgresql_ssl_certificate_key }}.root-owned-because-postgresql-is-a-fucking-turd"
    owner: root
    group: postgres
    mode: 0640
    force: yes